{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/forms\";\nexport let AddGoalPage = /*#__PURE__*/(() => {\n  var _class;\n  class AddGoalPage {\n    constructor(modalController) {\n      this.modalController = modalController;\n      this.goal = '';\n      this.desc = '';\n      this.deadline = '';\n    }\n    ngOnInit() {}\n    // Save new goal and close Add Goal Page\n    saveNewGoal() {\n      this.modalController.dismiss({\n        goal: this.goal,\n        desc: this.desc,\n        deadline: this.deadline\n      });\n    }\n    // Close Add Goal Page withou saving anything\n    closeNewGoal() {\n      this.modalController.dismiss();\n    }\n  }\n  _class = AddGoalPage;\n  _class.ɵfac = function AddGoalPage_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.ModalController));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-add-goal\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[\"slot\", \"start\", \"fill\", \"clear\", 3, \"click\"], [\"name\", \"close-outline\"], [2, \"text-align\", \"center\"], [\"slot\", \"end\", \"fill\", \"clear\", 3, \"click\"], [\"name\", \"checkmark\"], [\"color\", \"grey\"], [\"displayFormat\", \"DD MMM YYYY\", \"placeholder\", \"Select Date\", 3, \"ngModel\", \"ngModelChange\"], [\"color\", \"grey\", \"position\", \"stacked\", \"mode\", \"ios\", 2, \"font-size\", \"17px\"], [\"maxlength\", \"25\", \"type\", \"text\", \"placeholder\", \"What's your goal?\", \"name\", \"goal\", 3, \"ngModel\", \"ngModelChange\"], [\"inputmode\", \"text\", \"spellcheck\", \"true\", \"placeholder\", \"Tell us more about your goal.\", \"autogrow\", \"true\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function AddGoalPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-button\", 0);\n        i0.ɵɵlistener(\"click\", function AddGoalPage_Template_ion_button_click_2_listener() {\n          return ctx.closeNewGoal();\n        });\n        i0.ɵɵelement(3, \"ion-icon\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\", 2);\n        i0.ɵɵtext(5, \"New Goal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function AddGoalPage_Template_ion_button_click_6_listener() {\n          return ctx.saveNewGoal();\n        });\n        i0.ɵɵelement(7, \"ion-icon\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"ion-content\")(9, \"ion-item\")(10, \"ion-label\", 5);\n        i0.ɵɵtext(11, \"Deadline\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-datetime\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AddGoalPage_Template_ion_datetime_ngModelChange_12_listener($event) {\n          return ctx.deadline = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"ion-item\")(14, \"ion-label\", 7);\n        i0.ɵɵtext(15, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AddGoalPage_Template_ion_input_ngModelChange_16_listener($event) {\n          return ctx.goal = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"ion-item\")(18, \"ion-label\", 7);\n        i0.ɵɵtext(19, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ion-textarea\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AddGoalPage_Template_ion_textarea_ngModelChange_20_listener($event) {\n          return ctx.desc = $event;\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.deadline);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.goal);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.desc);\n      }\n    },\n    dependencies: [i2.NgControlStatus, i2.MaxLengthValidator, i2.NgModel]\n  });\n  return AddGoalPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}