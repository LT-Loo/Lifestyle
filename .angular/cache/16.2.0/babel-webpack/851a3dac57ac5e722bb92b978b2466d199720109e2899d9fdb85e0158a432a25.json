{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lerth/Documents/Lifestyle/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"../storage.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"goalChart\"];\nfunction RecordPage_ion_card_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-card-header\", 6)(2, \"ion-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-card-subtitle\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"ion-card-content\", 7);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const record_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r2.goal);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Accomplished Date: \", i0.ɵɵpipeBind2(6, 3, record_r2.finishDate, \"dd MMM YYYY\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r2.desc);\n  }\n}\nexport let RecordPage = /*#__PURE__*/(() => {\n  var _class;\n  class RecordPage {\n    constructor(modalController, storageServe) {\n      this.modalController = modalController;\n      this.storageServe = storageServe;\n      this.goalRecord = []; // List of completed goals\n      this.unfinished = [];\n    }\n    // Get list from Goal Page\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        // Access storage for completed and uncompleted goal lists\n        _this.goalRecord = yield _this.storageServe.accessStorage(\"achieved\");\n        _this.unfinished = yield _this.storageServe.accessStorage(\"goals\");\n        // Create and display chart\n        _this.chart = new Chart(_this.canvas.nativeElement, {\n          type: 'doughnut',\n          data: {\n            labels: ['Completed', 'Uncompleted'],\n            datasets: [{\n              label: \"My Goal Chart\",\n              data: [_this.goalRecord.length, _this.unfinished.length],\n              backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)'],\n              hoverOffset: 7,\n              hoverBorderWidth: 2,\n              borderWidth: 0,\n              cutout: 40\n            }]\n          },\n          options: {\n            layout: {\n              padding: {\n                top: 12\n              }\n            },\n            plugins: {\n              legend: {\n                position: 'bottom',\n                labels: {\n                  padding: 7\n                }\n              }\n            }\n          }\n        });\n      })();\n    }\n    // Close Record Page without passing anything back\n    backToGoal() {\n      this.modalController.dismiss();\n    }\n  }\n  _class = RecordPage;\n  _class.ɵfac = function RecordPage_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.StorageService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-record\"]],\n    viewQuery: function RecordPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n      }\n    },\n    decls: 10,\n    vars: 1,\n    consts: [[\"slot\", \"start\", \"fill\", \"clear\", 3, \"click\"], [\"name\", \"arrow-back-outline\"], [\"mode\", \"ios\", 2, \"text-align\", \"center\"], [\"height\", \"270\"], [\"goalChart\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"mode\", \"md\"], [\"mode\", \"md\", 1, \"item-text-wrap\"]],\n    template: function RecordPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-button\", 0);\n        i0.ɵɵlistener(\"click\", function RecordPage_Template_ion_button_click_2_listener() {\n          return ctx.backToGoal();\n        });\n        i0.ɵɵelement(3, \"ion-icon\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\", 2);\n        i0.ɵɵtext(5, \"Goal Chart\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\");\n        i0.ɵɵelement(7, \"canvas\", 3, 4);\n        i0.ɵɵtemplate(9, RecordPage_ion_card_9_Template, 9, 6, \"ion-card\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.goalRecord.slice().reverse());\n      }\n    },\n    dependencies: [i3.NgForOf, i3.DatePipe]\n  });\n  return RecordPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}